// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Elmah.Io.Client
{
    using Azure.Core.Pipeline;
    using System;

    /// <summary>
    /// This is the public REST API for elmah.io. All of the integrations
    /// communicates with elmah.io through this API.&lt;br/&gt;&lt;br/&gt;For
    /// additional help getting started with the API, visit the following help
    /// articles:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;[Using the REST
    /// API](https://docs.elmah.io/using-the-rest-api/)&lt;/li&gt;&lt;li&gt;[Where
    /// is my API
    /// key?](https://docs.elmah.io/where-is-my-api-key/)&lt;/li&gt;&lt;li&gt;[Where
    /// is my log
    /// ID?](https://docs.elmah.io/where-is-my-log-id/)&lt;/li&gt;&lt;li&gt;[How
    /// to configure API key
    /// permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    public partial class ElmahioAPI
    {
        private System.Uri BaseUri { get; set; }
        private ClientDiagnostics clientDiagnostics { get; set; }
        private HttpPipeline httpPipeline { get; set; }

        /// <summary>
        /// Gets the IDeployments.
        /// </summary>
        public virtual DeploymentsClient Deployments { get; private set; }

        /// <summary>
        /// Gets the IHeartbeats.
        /// </summary>
        public virtual HeartbeatsClient Heartbeats { get; private set; }

        /// <summary>
        /// Gets the ILogs.
        /// </summary>
        public virtual LogsClient Logs { get; private set; }

        /// <summary>
        /// Gets the IMessages.
        /// </summary>
        public virtual MessagesClient Messages { get; private set; }

        /// <summary>
        /// Gets the IUptimeChecks.
        /// </summary>
        public virtual UptimeChecksClient UptimeChecks { get; private set; }

        internal ElmahioAPI(ClientDiagnostics clientDiagnostics, HttpPipeline httpPipeline, System.Uri baseUri = null)
        {
            this.clientDiagnostics = clientDiagnostics;
            this.httpPipeline = httpPipeline;
            this.BaseUri = baseUri;
            Initialize();
        }

        /// <summary>
        /// An optional partial-method to perform custom initialization.
        ///</summary>
        partial void CustomInitialize();
        /// <summary>
        /// Initializes client properties.
        /// </summary>
        private void Initialize()
        {
            BaseUri ??= new System.Uri("https://api.elmah.io");
            Deployments = new DeploymentsClient(clientDiagnostics, httpPipeline, BaseUri, Options);
            Heartbeats = new HeartbeatsClient(clientDiagnostics, httpPipeline, BaseUri, Options);
            Logs = new LogsClient(clientDiagnostics, httpPipeline, BaseUri, Options);
            Messages = new MessagesClient(clientDiagnostics, httpPipeline, BaseUri, Options);
            UptimeChecks = new UptimeChecksClient(clientDiagnostics, httpPipeline, BaseUri, Options);
            CustomInitialize();
        }
    }

    public partial class DeploymentsClient
    {
        public ElmahIoOptions Options { get; set; }
        internal DeploymentsClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint, ElmahIoOptions Options)
        {
            this.Options = Options;
            RestClient = new DeploymentsRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }
    }

    public partial class HeartbeatsClient
    {
        public ElmahIoOptions Options { get; set; }
        internal HeartbeatsClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint, ElmahIoOptions Options)
        {
            this.Options = Options;
            RestClient = new HeartbeatsRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }
    }

    public partial class LogsClient
    {
        public ElmahIoOptions Options { get; set; }
        internal LogsClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint, ElmahIoOptions Options)
        {
            this.Options = Options;
            RestClient = new LogsRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }
    }

    public partial class MessagesClient
    {
        public ElmahIoOptions Options { get; set; }
        internal MessagesClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint, ElmahIoOptions Options)
        {
            this.Options = Options;
            RestClient = new MessagesRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }
    }

    public partial class UptimeChecksClient
    {
        public ElmahIoOptions Options { get; set; }
        internal UptimeChecksClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint, ElmahIoOptions Options)
        {
            this.Options = Options;
            RestClient = new UptimeChecksRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }
    }
}
