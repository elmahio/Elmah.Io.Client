// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Elmah.Io.Client
{
    using Newtonsoft.Json;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Net;
    using System.Net.Http;

    /// <summary>
    /// This is the public REST API for elmah.io. All of the integrations
    /// communicates with elmah.io through this API.&lt;br/&gt;&lt;br/&gt;For
    /// additional help getting started with the API, visit the following help
    /// articles:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;[Using the REST
    /// API](https://docs.elmah.io/using-the-rest-api/)&lt;/li&gt;&lt;li&gt;[Where
    /// is my API
    /// key?](https://docs.elmah.io/where-is-my-api-key/)&lt;/li&gt;&lt;li&gt;[Where
    /// is my log
    /// ID?](https://docs.elmah.io/where-is-my-log-id/)&lt;/li&gt;&lt;li&gt;[How
    /// to configure API key
    /// permissions](https://docs.elmah.io/how-to-configure-api-key-permissions/)&lt;/li&gt;&lt;/ul&gt;
    /// </summary>
    public partial class ElmahioAPI
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        public System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        public Func<JsonSerializerSettings> SerializationSettings { get; private set; }

        /// <summary>
        /// Gets the IDeployments.
        /// </summary>
        public DeploymentsClient Deployments { get; private set; }

        /// <summary>
        /// Gets the IHeartbeats.
        /// </summary>
        public HeartbeatsClient Heartbeats { get; private set; }

        /// <summary>
        /// Gets the ILogs.
        /// </summary>
        public LogsClient Logs { get; private set; }

        /// <summary>
        /// Gets the IMessages.
        /// </summary>
        public MessagesClient Messages { get; private set; }

        /// <summary>
        /// Gets the IUptimeChecks.
        /// </summary>
        public UptimeChecksClient UptimeChecks { get; private set; }

        public ElmahioAPI()
        {
            Initialize();
        }

        /// <summary>
        /// An optional partial-method to perform custom initialization.
        ///</summary>
        partial void CustomInitialize();
        /// <summary>
        /// Initializes client properties.
        /// </summary>
        private void Initialize()
        {
            BaseUri = new System.Uri("https://api.elmah.io");
            SerializationSettings = () => new JsonSerializerSettings
            {
                Formatting = Newtonsoft.Json.Formatting.Indented,
                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,
                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,
                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,
                // ContractResolver = new ReadOnlyJsonContractResolver(),
                Converters = new List<JsonConverter>
                {
                    // new Iso8601TimeSpanConverter()
                }
            };
            CustomInitialize();
            Deployments = new DeploymentsClient(this);
            Heartbeats = new HeartbeatsClient(this);
            Logs = new LogsClient(this);
            Messages = new MessagesClient(this);
            UptimeChecks = new UptimeChecksClient(this);
        }
    }

    partial class DeploymentsClient
    {
        public DeploymentsClient(ElmahioAPI elmahioAPI)
        {
            BaseUrl = elmahioAPI.BaseUri.ToString();
            _httpClient = elmahioAPI.HttpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(elmahioAPI.SerializationSettings);
        }
    }

    partial class HeartbeatsClient
    {
        public HeartbeatsClient(ElmahioAPI elmahioAPI)
        {
            BaseUrl = elmahioAPI.BaseUri.ToString();
            _httpClient = elmahioAPI.HttpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(elmahioAPI.SerializationSettings);
        }
    }

    partial class LogsClient
    {
        public LogsClient(ElmahioAPI elmahioAPI)
        {
            BaseUrl = elmahioAPI.BaseUri.ToString();
            _httpClient = elmahioAPI.HttpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(elmahioAPI.SerializationSettings);
        }
    }

    partial class MessagesClient
    {
        public MessagesClient(ElmahioAPI elmahioAPI)
        {
            BaseUrl = elmahioAPI.BaseUri.ToString();
            _httpClient = elmahioAPI.HttpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(elmahioAPI.SerializationSettings);
        }
    }

    partial class UptimeChecksClient
    {
        public UptimeChecksClient(ElmahioAPI elmahioAPI)
        {
            BaseUrl = elmahioAPI.BaseUri.ToString();
            _httpClient = elmahioAPI.HttpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(elmahioAPI.SerializationSettings);
        }
    }
}
