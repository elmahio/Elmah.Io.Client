// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Elmah.Io.Client.Models
{
    public partial class CreateMessage : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Application))
            {
                writer.WritePropertyName("application");
                writer.WriteStringValue(Application);
            }
            if (Optional.IsDefined(Detail))
            {
                writer.WritePropertyName("detail");
                writer.WriteStringValue(Detail);
            }
            if (Optional.IsDefined(Hostname))
            {
                writer.WritePropertyName("hostname");
                writer.WriteStringValue(Hostname);
            }
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title");
                writer.WriteStringValue(Title);
            }
            if (Optional.IsDefined(TitleTemplate))
            {
                writer.WritePropertyName("titleTemplate");
                writer.WriteStringValue(TitleTemplate);
            }
            if (Optional.IsDefined(Source))
            {
                writer.WritePropertyName("source");
                writer.WriteStringValue(Source);
            }
            if (Optional.IsDefined(StatusCode))
            {
                writer.WritePropertyName("statusCode");
                writer.WriteNumberValue(StatusCode.Value);
            }
            if (Optional.IsDefined(DateTime))
            {
                writer.WritePropertyName("dateTime");
                writer.WriteStringValue(DateTime.Value, "O");
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            if (Optional.IsDefined(User))
            {
                writer.WritePropertyName("user");
                writer.WriteStringValue(User);
            }
            if (Optional.IsDefined(Severity))
            {
                writer.WritePropertyName("severity");
                writer.WriteStringValue(Severity);
            }
            if (Optional.IsDefined(Url))
            {
                writer.WritePropertyName("url");
                writer.WriteStringValue(Url);
            }
            if (Optional.IsDefined(Method))
            {
                writer.WritePropertyName("method");
                writer.WriteStringValue(Method);
            }
            if (Optional.IsDefined(Version))
            {
                writer.WritePropertyName("version");
                writer.WriteStringValue(Version);
            }
            if (Optional.IsDefined(CorrelationId))
            {
                writer.WritePropertyName("correlationId");
                writer.WriteStringValue(CorrelationId);
            }
            if (Optional.IsCollectionDefined(Cookies))
            {
                writer.WritePropertyName("cookies");
                writer.WriteStartArray();
                foreach (var item in Cookies)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Form))
            {
                writer.WritePropertyName("form");
                writer.WriteStartArray();
                foreach (var item in Form)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(QueryString))
            {
                writer.WritePropertyName("queryString");
                writer.WriteStartArray();
                foreach (var item in QueryString)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ServerVariables))
            {
                writer.WritePropertyName("serverVariables");
                writer.WriteStartArray();
                foreach (var item in ServerVariables)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Data))
            {
                writer.WritePropertyName("data");
                writer.WriteStartArray();
                foreach (var item in Data)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
